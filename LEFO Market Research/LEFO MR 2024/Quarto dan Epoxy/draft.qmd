---
title: "Reporting using R Studio"
subtitle: "expss, dplyr, ggplot2, epoxy, dan quarto"
author: ikanx101.com
institute: Market Research Dept. Nutrifood
format: 
  revealjs:
    theme: blood
    logo: logo.png
    css: logo.css
    slide-number: true
    footer: Sebuah Learning Forum Market Riset
    incremental: true
    show-slide-number: all
    transition: convex
    width: 1280
    height: 720
    highlight-style: arrow-dark
    toc: true
    toc-title: Agenda Kita Hari Ini
    toc-depth: 1
    output-location: column
    code-overflow: scroll
editor: visual
execute: 
  echo: true
  warning: false
---

# PENDAHULUAN {.center}

# MASALAH {.center .unlisted}

Apa Masalah Kita Tahun Ini?

## Tujuan {.center}

-   Mempercepat *workflow* pengerjaan *report* market riset.
-   Saling *sharing best practice* pengerjaan *report* market riset.
-   Tentunya menggunakan **R** atau **R Studio**.

## Tahapan *Workflow* {.center}

Saya membagi *flow* kerja pembuatan *report* market riset sebagai berikut:

1.  Membuat tabulasi dengan `library(expss)` atau `library(dplyr)`.
2.  Membuat visualisasi dengan `library(ggplot2)`.
3.  Membuat *report* dengan `quarto`.
4.  Membuat *inline reporting* dengan `library(epoxy)`.

## Kenapa Harus Menggunakan **R**? {.center}

```{mermaid}
%%| echo: false
flowchart LR
  A[Raw Data] --> B(Data Prep)
  B --> C(expss)
  B --> D(dplyr janitor)
  C --> E[Tabulasi]
  D --> E
  E --> F[Saved to Excel]
  E --> G[Data Viz]
  G --> H[Saved to png/jpeg]
  G --> I[Report w/ markdown]
  I --> J[Full report]
  F --> K(Buat report pptx manual)
  H --> K
```

## Silakan *Install Libraries* Berikut Ini {.center}

```{r}
library(dplyr)
library(tidyr)
library(reshape2)
library(janitor)
library(expss)
library(ggplot2)
library(epoxy)
library(openxlsx)
```

*Install libraries* dengan cara: `install.packages("nama library")`.

## Data yang Digunakan {.center .smaller}

Kita buat data sintetis sebagai berikut:

```{r}
n_resp = 500
id     = 1:n_resp
gender = sample(c("pria","wanita"),n_resp,replace = T)
usia   = sample(c("< 15 th","16 - 20 th","21 - 25 th","26 - 30 th","> 30 th"),
                n_resp,prob = c(.1,.2,.4,.2,2),replace = T)
usia   = factor(usia,levels = c("< 15 th","16 - 20 th","21 - 25 th","26 - 30 th","> 30 th"))
aware  = sample(c("ya","tidak"),prob = c(.3,.7),n_resp,replace = T)
tv_1   = sample(c(0,1),prob = c(.1,.9),n_resp,replace = T)
tv_2   = sample(c(0,1),prob = c(.3,.7),n_resp,replace = T)
tv_3   = sample(c(0,1),prob = c(.5,.5),n_resp,replace = T)
tv_4   = sample(c(0,1),prob = c(.7,.3),n_resp,replace = T)
tv_5   = sample(c(0,1),prob = c(.99,.01),n_resp,replace = T)

df     = data.frame(id,gender,usia,aware,tv_1,tv_2,tv_3,tv_4,tv_5) %>% 
  mutate(tv_1 = ifelse(tv_1 == 1,"RCTI",NA),
         tv_2 = ifelse(tv_2 == 1,"SCTV",NA),
         tv_3 = ifelse(tv_3 == 1,"METRO",NA),
         tv_4 = ifelse(tv_4 == 1,"INDOSIAR",NA),
         tv_5 = ifelse(tv_5 == 1,"NET",NA))

df %>% head(15) %>% 
  knitr::kable(align   = "c",caption = "Sample 15 Data Responden") %>% 
  kableExtra::kable_styling(font_size = 14)
```

Kita akan membuat *report* dari data di atas.

# MEMBUAT TABULASI

## `library(expss)` {.center .smaller}

## Tabulasi Sederhana {.center .smaller}

*Real number*

```{r}
tabel_1 = 
  df %>% 
  tab_cells(gender) %>% 
  tab_stat_cases() %>% 
  tab_pivot() %>% 
  set_caption("Real Number Jenis Kelamin") 

tabel_1
```

## Tabulasi Sederhana {.center .smaller}

*Percentage*

```{r}
tabel_2 = 
  df %>% 
  tab_cells(gender) %>% 
  tab_stat_cpct() %>% 
  tab_pivot() %>% 
  set_caption("Percentage Jenis Kelamin")

tabel_2
```

## Tabulasi Sederhana {.center .smaller}

*Real Number and Percentage*

```{r}
tabel_3 = 
  df %>% 
  tab_cells(gender) %>% 
  tab_stat_cases() %>% 
  tab_stat_cpct() %>% 
  tab_pivot() %>% 
  set_caption("Real Number and Percentage Jenis Kelamin")

tabel_3
```

## Tabulasi Sederhana {.center .smaller}

*Real number*

```{r}
tabel_4 = 
  df %>% 
  tab_cells(gender,usia) %>% 
  tab_stat_cases() %>%
  tab_pivot()

tabel_4
```

## Crosstabulasi Sederhana {.center .smaller}

*Percentage*

```{r}
tabel_5 = 
  df %>% 
  tab_cells(usia) %>% 
  tab_cols(gender,total()) %>% 
  tab_stat_cpct() %>% 
  tab_pivot() %>% 
  tab_caption("Crosstabulasi gender vs usia")

tabel_5
```

## Crosstabulasi Sederhana {.center .smaller}

*Percentage*

```{r}
tabel_6 =
  df %>% 
  tab_cells(gender) %>% 
  tab_cols(aware,total()) %>% 
  tab_stat_cpct() %>% 
  tab_pivot() %>% 
  tab_caption("Crosstabulasi gender vs awareness")

tabel_6
```

## Tabulasi *Multiple Responses* {.center .smaller}

*Percentage*

```{r}
tabel_7 = 
  df %>% 
  tab_cells(mrset(tv_1 %to% tv_5)) %>% 
  tab_stat_cpct() %>%
  tab_sort_desc() %>% 
  tab_pivot() %>% 
  tab_caption("Stasiun TV")

tabel_7
```

## Crosstabulasi *Multiple Responses* {.center .smaller}

*Percentage*

```{r}
tabel_8 =
  df %>% 
  tab_cells(mrset(tv_1 %to% tv_5)) %>%
  tab_cols(gender,total()) %>% 
  tab_stat_cpct() %>%
  tab_sort_desc() %>% 
  tab_pivot() %>% 
  tab_caption("Crosstabulasi stasiun TV vs gender")

tabel_8
```

## Crosstabulasi *Multiple Responses* {.center .smaller}

*Percentage* dengan tambahan signifikansi

```{r}
tabel_9 =
  df %>% 
  tab_cells(usia) %>%
  tab_cols(gender,total()) %>% 
  tab_stat_cpct() %>%
  tab_sort_desc() %>% 
  tab_last_sig_cpct() %>% 
  tab_pivot() %>% 
  tab_caption("Crosstabulasi stasiun TV vs gender")

tabel_9
```

## Crosstabulasi *Multiple Responses* dengan Filter Usia {.center .smaller}

```{r}
tabel_10 =
  df %>% 
  filter(aware == "ya") %>% 
  tab_cells(usia) %>%
  tab_cols(gender,total()) %>% 
  tab_stat_cpct() %>%
  tab_sort_desc() %>% 
  tab_last_sig_cpct() %>% 
  tab_pivot() %>% 
  tab_caption("Base: responden yang aware")

# Percentage dengan tambahan signifikansi: crosstabulasi stasiun TV vs gender
tabel_10
```

## *Save Into Excel File*

```{r}
#| output-location: default

# kita bikin workbook-nya
wb = createWorkbook()

# kita masukkan datanya
tabel_all = list(tabel_1,tabel_2,tabel_3,
                 tabel_4,tabel_5,tabel_6,
                 tabel_7,tabel_8,tabel_9)

# bikin sheet
nama_sheet = paste0("tabulasi all")
sh = addWorksheet(wb, nama_sheet)

# masukin semua tabel ke sheet tersebut
xl_write(tabel_all, wb, sh)

# export ke Excel
saveWorkbook(wb, "hasil tabulasi new.xlsx", overwrite = TRUE)
```

## *Wrap Up!* {.center}

::: columns
::: {.column width="50%"}
### *Advantages*

-   Mirip *syntax* `SPSS`.
-   Baik untuk uji statistik dan signifikansi langsung.
-   Format tabel jika di-*export* ke `Ms. Excel` **terbaik**.
:::

::: {.column width="50%"}
### *Disadvantages*

-   Agak rumit untuk di-*render* langsung ke *output* `markdown`.
-   Agak rumit untuk digabungkan ke skrip visualisasi `ggplot2`.
:::
:::

## `library(dplyr)` dan `library(janitor)` {.center .smaller}

## Tabulasi Sederhana {.center .smaller}

*Real number* dan *Percentage*: Alternatif 1

```{r}
tabel_1 = 
  df %>% 
  group_by(gender) %>% 
  tally() %>% 
  ungroup() %>% 
  mutate(persen = n / sum(n) * 100,
         persen = round(persen,2)) %>% 
  janitor::adorn_totals()

tabel_1
```

## Tabulasi Sederhana {.center .smaller}

*Real number* dan *Percentage*: Alternatif 2

```{r}
tabel_1 = 
  df %>% 
  count(gender) %>% 
  mutate(persen = prop.table(n) * 100) %>% 
  adorn_totals()

tabel_1
```

## Tabulasi Sederhana {.center .smaller}

*Real number* dan *Percentage*: Alternatif 3

```{r}
tabel_1 = 
  df %>% 
  tabyl(gender) %>% 
  adorn_pct_formatting(digits = 2)

tabel_1
```

## Crosstabulasi Sederhana {.center .smaller}

*Real number* dan *Percentage*: Alternatif 1

```{r}
tabel_1 = 
  df %>% 
  group_by(gender,aware) %>% 
  tally() %>% 
  ungroup() %>% 
  group_by(gender) %>% 
  mutate(persen = n / sum(n) * 100,
         persen = round(persen,2)) %>% 
  ungroup() 

tabel_1
```

## Crosstabulasi Sederhana {.center .smaller}

*Real number* dan *Percentage*: Alternatif 2

```{r}
tabel_2 = 
  df %>% 
  tabyl(aware,gender) %>% 
  adorn_totals(c("row","col")) %>%
  adorn_percentages() %>%
  adorn_pct_formatting(digits = 2)

tabel_2
```

## Crosstabulasi Sederhana {.center .smaller}

*Real number* dan *Percentage*: Alternatif 3

```{r}
tabel_3 = 
  df %>%
  count(gender,aware) %>%
  group_by(gender) %>% 
  mutate(n = prop.table(n) * 100) %>%
  ungroup() %>% 
  pivot_wider(names_from = gender, values_from = n, values_fill = 0)

tabel_3
```

## Tabulasi *Multiple Responses* {.center .smaller}

*Real number* dan *Percentage*

```{r}
df %>%
  select(id,tv_1,tv_2,tv_3,tv_4,tv_5) %>% 
  melt(id.vars = "id") %>% 
  filter(!is.na(value)) %>% 
  count(value) %>% 
  mutate(persen = n / nrow(df) * 100,
         persen = round(persen,2))
```

## Tabulasi *Multiple Responses* {.center .smaller}

*Real number* dan *Percentage*

```{r}
df %>%
  select(id,gender,tv_1,tv_2,tv_3,tv_4,tv_5) %>% 
  melt(id.vars = c("id","gender")) %>% 
  filter(!is.na(value)) %>% 
  count(gender,value) %>% 
  group_by(gender) %>% 
  mutate(persen = n / nrow(df) * 100,
         persen = round(persen,2)) %>%
  ungroup() %>% 
  pivot_wider(names_from = gender, values_from = persen) %>% 
  adorn_totals()
```

## *Wrap Up!* {.center}

::: columns
::: {.column width="50%"}
### *Advantages*

-   Tidak ada uji statistik dan signifikansi secara langsung.
:::

::: {.column width="50%"}
### *Disadvantages*

-   Bisa langsung *render* langsung ke *output* `markdown` menggunakan `knitr`.
-   Sangat mudah untuk digabungkan ke skrip visualisasi `ggplot2`.
:::
:::

# VISUALISASI

## Pertanyaannya: {.center}

#### Lebih ribet gak sih harus bikin data viz pake `library(ggplot2)` ?

## Jawabannya {.center}

#### *Tergantung!*

-   Bisa jadi lebih cepat.
-   Bisa jadi lebih lambat.
-   TAPI:
    -   Untuk data yang selalu bertambah dan *report* yang berulang, pengerjaannya akan lebih cepat!
    -   *Reproducibility!*

## *Tips and Trick* {.center}

Buat *custom function!*

## Contoh

```{r}
bikinin.pie.chart.dari.data.saya.donk=function(data,variabel,pertanyaan,sub.judul){
  # bikin tabulasi
  tabulasi=data %>% tab_cells(variabel) %>% tab_stat_cpct() %>% tab_pivot()
  # merapikan tabulasi
  tabulasi$dummy=strsplit(tabulasi$row_labels,'\\|')
  for(i in 1:length(tabulasi$dummy))
  {tabulasi$row_labels[i]=unlist(tabulasi$dummy[i])[2]}
  tabulasi=data.frame(tabulasi)
  tabulasi=tabulasi[-3]
  colnames(tabulasi)=c('ket','percent')
  tabulasi$percent=round(tabulasi$percent,2)
  n = as.numeric(tabulasi %>% filter(grepl('total',ket,ignore.case=T)) %>% 
                   summarise(n=sum(percent))) #ambil base buat kepentingan chart
  tabulasi = tabulasi %>% 
    filter(!grepl('total',ket,ignore.case=T)) #tabulasi final untuk chart
  tabulasi = tabulasi %>% filter(!is.na(ket))
  
  # buat caption
  if(n>30){
    label_n=paste0(tabulasi$ket,
                   ', ',
                   tabulasi$percent,'%')
    caption_n = paste0('PERCENTAGE - n = ',n)
  } else{
    label_n=paste0(tabulasi$ket,', ',
                   round(tabulasi$percent*n/100,0),
                   ' (',
                   tabulasi$percent,'%)')
    caption_n = paste0('REAL NUMBER - n = ',n,', indikasi')
  }
  
  # buat visualisasi
  ggplot(tabulasi,aes(x='',y=percent,fill=ket,label=label_n)) + 
    geom_bar(stat='identity',color = "black") + 
    coord_polar("y", start=0) +
    scale_fill_brewer(palette="Pastel2") + 
    theme_minimal() + 
    theme(panel.grid=element_blank(),axis.title.y=element_blank(),
          axis.title.x=element_blank(),legend.position = 'none',
          plot.title = element_text(size=17),
          plot.subtitle = element_text(size=13),
          plot.caption=element_text(size=12),
          axis.text.y = element_blank(),
          axis.text.x = element_blank()) +
    geom_label(position = position_stack(vjust = 0.5),size=4.5) +
    labs(caption = caption_n) +
    labs(title=pertanyaan,subtitle = sub.judul)
}
  
bikinin.pie.chart.dari.data.saya.donk(df,df$gender,"Gender responden?","base: all resp")
```

## Contoh

```{r}
bikinin.pie.chart.dari.data.saya.donk(df,df$aware,"Awareness responden?","base: all resp")
```

# *REPORTING*

## *Welcome to Quarto* {.center}

Per Januari 2024 saya mengucapkan *Goodbye to Xaringan*.

![](sharingan.png){fig-align="center" width="370" height="133"}

## *Slides* ini Dibuat dengan Quarto! {.center}

## _Features!_ {.center}

1. _Multiple formats_; mulai dari _presentation_, pdf, _books_, _web_, _manuscripts_, dan lain-lain.
1. _Multiple features!_  Bisa dicek di [_Quarto guides_](https://quarto.org/docs/guide/).

## _Inline Reporting_ Menggunakan `library(epoxy)` {.center}

## Misalkan Data _Summary_ {.center}

```{r}
summary_df = 
  df %>% 
  summarise(n_resp   = length(id),
            n_pria   = length(id[gender == "pria"]),
            n_wanita = length(id[gender == "wanita"]),
            n_aware  = length(id[aware == "ya"])
            )

summary_df %>% knitr::kable()
```


## `epoxy` Demo {.center .smaller}

Kita bisa menuliskan skrip `epoxy` sebagai berikut:

```
Total responden yang telah diwawancara adalah sebesar {summary_df$n_resp}. Terdiri dari {summary_df$n_pria} orang responden pria dan {summary_df$n_wanita} orang responden wanita. 

> Kita dapatkan {summary_df$n_aware} orang _aware_ terhadap iklan produk __X__ dari total {summary_df$n_resp} orang responden.
```

Hasilnya adalah:

```{epoxy}
Total responden yang telah diwawancara adalah sebesar {summary_df$n_resp}. Terdiri dari {summary_df$n_pria} orang responden pria dan {summary_df$n_wanita} orang responden wanita. 

> Kita dapatkan {summary_df$n_aware} orang _aware_ terhadap iklan produk __X__ dari total {summary_df$n_resp} orang responden.
```


## _Another Example_ {.center .smaller}

```{r}
summary_df = 
  df %>% 
  tabyl(usia,aware)

summary_df %>% knitr::kable()
```

Kita bisa menuliskan:

```
#```{epoxy .data = summary_df}
1. Para responden {usia}, kita dapatkan {ya} orang _aware_ dan {tidak} orang _unaware_ terhadap iklan.
```

## _Results_ {.center .smaller}

```{epoxy .data = summary_df}
1. Para responden {usia}, kita dapatkan {ya} orang _aware_ dan {tidak} orang _unaware_ terhadap iklan.
```

# TERIMA KASIH {.center .unlisted .unnumbered}